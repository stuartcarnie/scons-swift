#!/usr/bin/env python
from utils.scons_hints import *

# Import the environment from parent
Import('env')

# Clone the environment to avoid modifying the global one
env = env.Clone()

# Configure C++ standard and optimizations
env.Append(CXXFLAGS=['-std=c++17'])

# Module map already exists in source directory, no need to create it

# Configure Swift to find the module map and C++ headers
# Only use source directory for module lookup to avoid conflicts
env.Append(SWIFTFLAGS=[
    '-I', ".",  # Find module.modulemap in source directory
    '-Xcc', '-std=c++17',  # Pass C++ standard to Clang
])

program = env.SwiftProgram("swift_calls_cpp", ["main.swift", "cpp_library.cpp"])

# Return the built targets
Return('program')
